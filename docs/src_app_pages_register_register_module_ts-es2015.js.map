{"version":3,"sources":["./src/app/pages/register/register-routing.module.ts","./src/app/pages/register/register.module.ts","./src/app/pages/register/register.page.ts","./src/app/pages/register/register.page.html"],"names":[],"mappings":"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","file":"src_app_pages_register_register_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {IonicStorageModule} from '@ionic/storage';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IonicStorageModule,\n    RegisterPageRoutingModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  constructor(private authService: AuthService, private router: Router, private storage: Storage) {}\n  registerForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.min(5)]),\n    hospitals: new FormControl([], [Validators.required]),\n    speciality: new FormControl('', [Validators.required]),\n  });\n  hospitals = ['Max', 'Dharamshila', 'Kailash', 'Metro'];\n  specialities = ['ENT', 'Dentist', 'Anaesthesia', 'Physician'];\n\n  ngOnInit() {}\n\n  async register() {\n    await this.storage.set('isRegistered', 'yes');\n    await this.storage.set('hospitals', this.registerForm.get('hospitals').value);\n    await this.storage.set('speciality', this.registerForm.get('speciality').value);\n    await this.storage.set('email', this.registerForm.get('email').value);\n    await this.storage.set('password', this.registerForm.get('password').value);\n    if (this.registerForm.valid) {\n      this.authService.register(this.registerForm.value).then((isRegistered) => {\n        if (isRegistered) {\n          const loginData = {\n            username: this.registerForm.value.email,\n            password: this.registerForm.value.password,\n          };\n          this.authService.login(loginData).then((result) => {\n            if (result) {\n              this.router.navigateByUrl('').then();\n            }\n          });\n        }\n      });\n    }\n  }\n}\n","<div class=\"container-fluid d-flex ion-justify-content-center h-100\" style=\"overflow-y: scroll\">\n  <div class=\"row\" style=\"flex: 1 0 auto\">\n    <div class=\"m-auto card-dimensions\">\n      <mat-card class=\"mat-elevation-z0 h-100 ion-text-center pb-5\">\n        <div class=\"d-flex ion-justify-content-center\">\n          <img  src=\"../../../assets/logo.png\" alt=\"Easy Doc Logo\">\n          <h1 class=\"pl-2\">Welcome</h1>\n        </div>\n        <mat-card-content>\n          <form  [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"single-line-container content-padding\">\n            <mat-form-field>\n              <input matInput formControlName=\"name\" placeholder=\"Full name\" type=\"text\" required >\n              <mat-error *ngIf=\"registerForm.get('name').hasError('required')\">\n                Name is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"email\" required>\n              <mat-error *ngIf=\"registerForm.get('email').hasError('email') && !registerForm.get('email').hasError('required')\">\n                Please enter a valid email address\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('email').hasError('required')\">\n                Email is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Set a password\" formControlName=\"password\" type=\"password\" required>\n              <mat-error *ngIf=\"registerForm.get('email').hasError('required')\">\n                Password is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Select your hospitals</mat-label>\n              <mat-select formControlName=\"hospitals\" multiple required>\n                <mat-option *ngFor=\"let hospital of hospitals\" [value]=\"hospital\">{{hospital}}</mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"registerForm.get('hospitals').hasError('required')\">\n                Select <strong>at-least one</strong> hospital\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>What is your speciality</mat-label>\n              <mat-select formControlName=\"speciality\" required>\n                <mat-option *ngFor=\"let speciality of specialities\" [value]=\"speciality\">\n                  {{speciality}}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"registerForm.get('speciality').hasError('required')\">\n                Speciality is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <button mat-raised-button class=\"mt-4\" color=\"primary\" type=\"submit\">Register</button>\n            <p style=\"font-size: 14px\" class=\"mt-2\">\n              Already have an account? <a [routerLink]=\"['/login']\">Log in</a>\n            </p>\n          </form>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}