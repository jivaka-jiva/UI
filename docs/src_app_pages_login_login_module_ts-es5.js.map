{"version":3,"sources":["webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPage","LoginPageRoutingModule","RouterModule","LoginPageModule","CommonModule","FormsModule","IonicModule","IonicStorageModule","MatCardModule","MatButtonModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","authService","toastController","router","storage","loginForm","FormGroup","username","FormControl","Validators","password","mes","create","message","duration","toast","present","valid","get","isRegistered","login","value","then","result","navigateByUrl","presentToast"],"mappings":"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","file":"src_app_pages_login_login_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {IonicStorageModule} from '@ionic/storage';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IonicStorageModule.forRoot(),\n    LoginPageRoutingModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","<div class=\"container-fluid d-flex ion-justify-content-center h-100\">\n  <div class=\"row\" style=\"flex: 1 0 auto\">\n    <div class=\"m-auto card-dimensions\">\n      <mat-card class=\"mat-elevation-z0 ion-text-center h-100 pt-5 pb-5\">\n        <img width=\"240px\" src=\"../../../assets/brand-logo.png\" alt=\"Easy Doc Logo\">\n        <mat-card-content>\n          <form [formGroup]=\"loginForm\" class=\"single-line-container content-padding\" (ngSubmit)=\"login()\">\n            <mat-form-field>\n              <input matInput placeholder=\"Email\" type=\"email\" required formControlName=\"username\">\n              <mat-error *ngIf=\"loginForm.get('username').hasError('email') && !loginForm.get('username').hasError('required')\">\n                Please enter a valid email address\n              </mat-error>\n              <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\n                Email is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Password\" type=\"password\" required formControlName=\"password\">\n              <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\n                Password is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <button mat-raised-button class=\"mt-4\" type=\"submit\" color=\"primary\">Login</button>\n            <p style=\"font-size: 14px\" class=\"mt-2\">\n              Don't have an account? <a [routerLink]=\"['/register']\">Sign up</a>\n            </p>\n          </form>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n  constructor(\n    private authService: AuthService,\n    private toastController: ToastController,\n    private router: Router,\n    private storage: Storage\n  ) {}\n\n  ngOnInit() {}\n\n  public async presentToast(mes: string) {\n    const toast = await this.toastController.create({\n      message: mes,\n      duration: 3000,\n    });\n    await toast.present();\n  }\n\n  async login() {\n    if (this.loginForm.valid) {\n      const isRegistered = await this.storage.get('isRegistered');\n      if (isRegistered === 'yes') {\n        this.authService.login(this.loginForm.value).then((result) => {\n          if (result) {\n            this.router.navigateByUrl('').then();\n          } else {\n            this.presentToast('Invalid email id or password').then();\n          }\n        });\n      } else {\n        this.presentToast('User does not exist, please sign up.').then();\n      }\n    }\n  }\n}\n"]}