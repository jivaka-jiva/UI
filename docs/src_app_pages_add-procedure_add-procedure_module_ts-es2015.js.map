{"version":3,"sources":["./src/app/pages/add-procedure/add-procedure-routing.module.ts","./src/app/pages/add-procedure/add-procedure.module.ts","./src/app/pages/add-procedure/add-procedure.page.ts","./src/app/pages/add-procedure/add-procedure.page.html"],"names":[],"mappings":"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","file":"src_app_pages_add-procedure_add-procedure_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddProcedurePage } from './add-procedure.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddProcedurePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddProcedurePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddProcedurePageRoutingModule } from './add-procedure-routing.module';\n\nimport {AddProcedurePage, ProcedureDetailsComponent} from './add-procedure.page';\nimport {ComponentsModule} from '../../components/components.module';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AddProcedurePageRoutingModule,\n    ComponentsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatDialogModule\n  ],\n  declarations: [AddProcedurePage, ProcedureDetailsComponent],\n  entryComponents: [ProcedureDetailsComponent]\n})\nexport class AddProcedurePageModule {}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-add-procedure',\n  templateUrl: './add-procedure.page.html',\n  styleUrls: ['./add-procedure.page.scss'],\n})\nexport class AddProcedurePage implements OnInit {\n  hospitals = [];\n  allProcedures = ['Inject', 'Sedate', 'Root canal', 'Eye test'];\n  addProcedureForm: FormGroup;\n  procedureForm: FormGroup;\n  constructor(\n    public modalController: ModalController,\n    public toastController: ToastController,\n    private authService: AuthService,\n    private router: Router,\n    private storage: Storage\n  ) {\n    this.storage.get('hospitals').then((data) => (this.hospitals = data));\n  }\n\n  ngOnInit() {\n    this.initializeForms();\n  }\n\n  ionViewWillEnter() {\n    this.initializeForms();\n    this.addProcedureForm.get('hospital').valueChanges.subscribe((value) => {\n      this.addProcedureForm.get('procedures').enable();\n      this.addProcedureForm.get('procedures').patchValue([]);\n    });\n  }\n\n  ionViewWillLeave() {\n    this.initializeForms();\n  }\n\n  initializeForms() {\n    this.addProcedureForm = new FormGroup({\n      hospital: new FormControl('', [Validators.required]),\n      procedures: new FormControl({ value: [], disabled: true }, [Validators.required]),\n    });\n    this.procedureForm = new FormGroup({\n      procedures: new FormArray([]),\n    });\n  }\n\n  async openProcedureDetailsDialog() {\n    const modal = await this.modalController.create({\n      component: ProcedureDetailsComponent,\n      componentProps: {\n        procedures: this.addProcedureForm.get('procedures').value,\n      },\n    });\n    await modal.present();\n    const { data } = await modal.onDidDismiss();\n    if (data !== 'dismissed') {\n      this.addProcedure(data);\n    }\n  }\n\n  addProcedure(procedureDetails: FormGroup[]) {\n    const allSelectedProcedures = this.procedureForm.get('procedures') as FormArray;\n    procedureDetails.forEach((procedureGroup) => {\n      const procedure = new FormGroup({\n        hospital: new FormControl(this.addProcedureForm.get('hospital').value, [Validators.required]),\n        procedure: new FormControl(procedureGroup.value.procedure, [Validators.required]),\n        count: new FormControl(procedureGroup.value.count, [Validators.min(1)]),\n        amount: new FormControl(procedureGroup.value.amount, [Validators.required, Validators.min(0)]),\n        patient: new FormControl(procedureGroup.value.patient),\n      });\n      allSelectedProcedures.controls.push(procedure);\n    });\n  }\n\n  submit() {\n    if (this.procedureForm.valid) {\n      this.saveData();\n      this.authService.showLoader('Saving procedures').then();\n      setTimeout(() => {\n        this.router.navigateByUrl('').then(() => this.authService.dismissLoader());\n      }, 1000);\n    }\n  }\n\n  async saveData() {\n    // TODO: for demo purpose\n    let totalFees = parseInt(await this.storage.get('total_fees_this_month'), 10) || 0;\n    let totalProcedures = parseInt(await this.storage.get('total_procedures'), 10) || 0;\n    const hospitals = await this.storage.get('hospitals');\n    const hospitalData = {};\n    await hospitals.forEach(async (hospital) => {\n      hospitalData[hospital] = (await this.storage.get(hospital)) || 0;\n    });\n\n    const procedureList = (this.procedureForm.get('procedures') as FormArray).controls;\n    procedureList.forEach((procedure) => {\n      totalFees += parseInt(procedure.value.amount, 10) * parseInt(procedure.value.count, 10);\n      totalProcedures += parseInt(procedure.value.count, 10);\n      hospitalData[procedure.value.hospital] =\n        parseInt(hospitalData[procedure.value.hospital], 10) + parseInt(procedure.value.amount, 10) * parseInt(procedure.value.count, 10);\n    });\n    await this.storage.set('total_fees_this_month', totalFees + '');\n    await this.storage.set('total_procedures', totalProcedures + '');\n    await hospitals.forEach(async (hospital) => {\n      await this.storage.set(hospital, hospitalData[hospital]);\n    });\n  }\n\n  async presentToast(mes: string) {\n    const toast = await this.toastController.create({\n      message: mes,\n      duration: 2000,\n    });\n    await toast.present();\n  }\n\n  deleteProcedure(index) {\n    const procedures = this.procedureForm.get('procedures') as FormArray;\n    procedures.controls.splice(index, 1);\n  }\n}\n\n@Component({\n  selector: 'procedure-details',\n  template: `\n    <ion-header translucent>\n      <ion-toolbar>\n        <ion-title>Modal Content</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"dismissModal('dismissed')\">Close</ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content *ngIf=\"procedureDetails\">\n      <form [formGroup]=\"procedureDetails\" style=\"margin-bottom: 36px\">\n        <div formArrayName=\"procedures\">\n          <section *ngFor=\"let procedure of procedures; let i = index\" [formGroupName]=\"i\">\n            <ion-item-group>\n              <ion-item-divider>\n                <ion-label>{{ procedure }}</ion-label>\n              </ion-item-divider>\n\n              <div class=\"flex-row ml-5 mt-2\" style=\"width: 72%\">\n                <mat-form-field style=\"width: 20%; margin-right: 8%\">\n                  <input matInput formControlName=\"count\" placeholder=\"Count\" required />\n                </mat-form-field>\n                <mat-form-field>\n                  <input matInput formControlName=\"amount\" placeholder=\"Amount per procedure\" required />\n                </mat-form-field>\n                <mat-form-field style=\"width: 100%\">\n                  <input matInput formControlName=\"patient\" placeholder=\"Patient's name\" required />\n                </mat-form-field>\n              </div>\n            </ion-item-group>\n          </section>\n        </div>\n      </form>\n    </ion-content>\n    <div class=\"bottom-fixed-div\">\n      <ion-button class=\"w-100\" type=\"submit\" (click)=\"submit()\" color=\"secondary\">Submit</ion-button>\n    </div>\n  `,\n})\nexport class ProcedureDetailsComponent implements OnInit {\n  @Input() procedures: string[];\n  procedureDetails = new FormGroup({\n    procedures: new FormArray([]),\n  });\n  constructor(public modalController: ModalController, public toastController: ToastController) {}\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n  async presentToast(mes: string) {\n    const toast = await this.toastController.create({\n      message: mes,\n      duration: 2000,\n    });\n    await toast.present();\n  }\n\n  dismissModal(data) {\n    this.modalController.dismiss(data).then();\n  }\n\n  initializeForm() {\n    this.procedures.forEach((procedure) => this.addProcedure(procedure));\n  }\n\n  addProcedure(procedure) {\n    const procedureDetailArray = this.procedureDetails.get('procedures') as FormArray;\n    const procedureDetails = new FormGroup({\n      procedure: new FormControl(procedure),\n      count: new FormControl(1, [Validators.min(1), Validators.required]),\n      amount: new FormControl(100, [Validators.min(0), Validators.required]),\n      patient: new FormControl(''),\n    });\n    procedureDetailArray.controls.push(procedureDetails);\n  }\n\n  submit() {\n    if (this.procedureDetails.valid) {\n      const procedureDetails = this.procedureDetails.get('procedures') as FormArray;\n      this.dismissModal(procedureDetails.controls);\n    } else {\n      this.presentToast('Form is invalid').then();\n    }\n  }\n}\n","<app-header [pageName]=\"'Add a Procedure'\"></app-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\" class=\"fixed-form\">\n        <form [formGroup]=\"addProcedureForm\" class=\"single-line-container flex-md-row\">\n          <mat-form-field>\n            <mat-label>Select hospital</mat-label>\n            <mat-select formControlName=\"hospital\" required>\n              <mat-option *ngFor=\"let hospital of hospitals\" [value]=\"hospital\">{{hospital}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Select Procedures</mat-label>\n            <mat-select formControlName=\"procedures\" multiple required>\n              <mat-option *ngFor=\"let procedure of allProcedures\" [value]=\"procedure\">{{procedure}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <ion-button color=\"secondary\" type=\"button\" [disabled]=\"addProcedureForm.get('procedures').value.length === 0\" (click)=\"openProcedureDetailsDialog()\">Add</ion-button>\n        </form>\n        <ion-text *ngIf=\"procedureForm.get('procedures')['controls'].length > 0\">\n          <p class=\"hint-text mt-5 mb-0 ml-1\">*Swipe right to delete a procedure.</p>\n        </ion-text>\n      </ion-col>\n      <ion-col style=\"margin-top: 15rem\" size=\"12\">\n        <mat-accordion>\n          <form [formGroup]=\"procedureForm\" (ngSubmit)=\"submit()\">\n\n            <ion-item-sliding *ngFor=\"let procedure of procedureForm.get('procedures')['controls']; let i = index\">\n              <ion-item-options side=\"start\">\n                <ion-item-option color=\"danger\" (click)=\"deleteProcedure(i)\">Delete</ion-item-option>\n              </ion-item-options>\n\n              <ion-item>\n                <mat-expansion-panel [formGroup]=\"procedure\">\n                  <mat-expansion-panel-header>\n                    <mat-panel-title>\n                      {{procedure.get('hospital').value}}\n                    </mat-panel-title>\n                    <mat-panel-description>\n                      {{procedure.get('procedure').value}}\n                    </mat-panel-description>\n                  </mat-expansion-panel-header>\n                  <div class=\"flex-row\">\n                    <mat-form-field style=\"width: 20%; margin-right: 8%\">\n                      <input matInput formControlName=\"count\" [value]=\"procedure.get('count').value\" placeholder=\"Count\">\n                    </mat-form-field>\n                    <mat-form-field>\n                      <input matInput formControlName=\"amount\" [value]=\"procedure.get('amount').value\" placeholder=\"Amount\">\n                    </mat-form-field>\n                    <mat-form-field style=\"width: 100%;\">\n                      <input matInput formControlName=\"patient\" [value]=\"procedure.get('patient').value\" placeholder=\"Patient's name\">\n                    </mat-form-field>\n                  </div>\n                </mat-expansion-panel>\n              </ion-item>\n            </ion-item-sliding>\n            <div class=\"bottom-fixed-div\">\n              <ion-button class=\"w-100\" type=\"submit\" [disabled]=\"procedureForm.get('procedures')['controls'].length === 0\">Save</ion-button>\n            </div>\n          </form>\n        </mat-accordion>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n"],"sourceRoot":"webpack:///"}