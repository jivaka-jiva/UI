{"version":3,"sources":["webpack:///src/app/pages/add-procedure/add-procedure-routing.module.ts","webpack:///src/app/pages/add-procedure/add-procedure.module.ts","webpack:///src/app/pages/add-procedure/add-procedure.page.html","webpack:///src/app/pages/add-procedure/add-procedure.page.ts"],"names":["routes","path","component","AddProcedurePage","AddProcedurePageRoutingModule","RouterModule","AddProcedurePageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","ComponentsModule","MatInputModule","MatButtonModule","MatSelectModule","MatExpansionModule","MatDialogModule","ProcedureDetailsComponent","modalController","toastController","authService","router","storage","hospitals","allProcedures","get","then","data","initializeForms","addProcedureForm","valueChanges","subscribe","value","enable","patchValue","FormGroup","hospital","FormControl","Validators","procedures","disabled","procedureForm","FormArray","create","componentProps","modal","present","onDidDismiss","addProcedure","procedureDetails","allSelectedProcedures","forEach","procedureGroup","procedure","count","amount","patient","controls","push","valid","saveData","showLoader","setTimeout","navigateByUrl","dismissLoader","parseInt","totalFees","totalProcedures","hospitalData","procedureList","set","mes","message","duration","toast","index","splice","openProcedureDetailsDialog","submit","initializeForm","dismiss","procedureDetailArray","dismissModal","presentToast"],"mappings":"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","file":"src_app_pages_add-procedure_add-procedure_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddProcedurePage } from './add-procedure.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddProcedurePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddProcedurePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddProcedurePageRoutingModule } from './add-procedure-routing.module';\n\nimport {AddProcedurePage, ProcedureDetailsComponent} from './add-procedure.page';\nimport {ComponentsModule} from '../../components/components.module';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AddProcedurePageRoutingModule,\n    ComponentsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatDialogModule\n  ],\n  declarations: [AddProcedurePage, ProcedureDetailsComponent],\n  entryComponents: [ProcedureDetailsComponent]\n})\nexport class AddProcedurePageModule {}\n","<app-header [pageName]=\"'Add a Procedure'\"></app-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\" class=\"fixed-form\">\n        <form [formGroup]=\"addProcedureForm\" class=\"single-line-container flex-md-row\">\n          <mat-form-field>\n            <mat-label>Select hospital</mat-label>\n            <mat-select formControlName=\"hospital\" required>\n              <mat-option *ngFor=\"let hospital of hospitals\" [value]=\"hospital\">{{hospital}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Select Procedures</mat-label>\n            <mat-select formControlName=\"procedures\" multiple required>\n              <mat-option *ngFor=\"let procedure of allProcedures\" [value]=\"procedure\">{{procedure}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <ion-button color=\"secondary\" type=\"button\" [disabled]=\"addProcedureForm.get('procedures').value.length === 0\" (click)=\"openProcedureDetailsDialog()\">Add</ion-button>\n        </form>\n        <ion-text *ngIf=\"procedureForm.get('procedures')['controls'].length > 0\">\n          <p class=\"hint-text mt-5 mb-0 ml-1\">*Swipe right to delete a procedure.</p>\n        </ion-text>\n      </ion-col>\n      <ion-col style=\"margin-top: 15rem\" size=\"12\">\n        <mat-accordion>\n          <form [formGroup]=\"procedureForm\" (ngSubmit)=\"submit()\">\n\n            <ion-item-sliding *ngFor=\"let procedure of procedureForm.get('procedures')['controls']; let i = index\">\n              <ion-item-options side=\"start\">\n                <ion-item-option color=\"danger\" (click)=\"deleteProcedure(i)\">Delete</ion-item-option>\n              </ion-item-options>\n\n              <ion-item>\n                <mat-expansion-panel [formGroup]=\"procedure\">\n                  <mat-expansion-panel-header>\n                    <mat-panel-title>\n                      {{procedure.get('hospital').value}}\n                    </mat-panel-title>\n                    <mat-panel-description>\n                      {{procedure.get('procedure').value}}\n                    </mat-panel-description>\n                  </mat-expansion-panel-header>\n                  <div class=\"flex-row\">\n                    <mat-form-field style=\"width: 20%; margin-right: 8%\">\n                      <input matInput formControlName=\"count\" [value]=\"procedure.get('count').value\" placeholder=\"Count\">\n                    </mat-form-field>\n                    <mat-form-field>\n                      <input matInput formControlName=\"amount\" [value]=\"procedure.get('amount').value\" placeholder=\"Amount\">\n                    </mat-form-field>\n                    <mat-form-field style=\"width: 100%;\">\n                      <input matInput formControlName=\"patient\" [value]=\"procedure.get('patient').value\" placeholder=\"Patient's name\">\n                    </mat-form-field>\n                  </div>\n                </mat-expansion-panel>\n              </ion-item>\n            </ion-item-sliding>\n            <div class=\"bottom-fixed-div\">\n              <ion-button class=\"w-100\" type=\"submit\" [disabled]=\"procedureForm.get('procedures')['controls'].length === 0\">Save</ion-button>\n            </div>\n          </form>\n        </mat-accordion>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-add-procedure',\n  templateUrl: './add-procedure.page.html',\n  styleUrls: ['./add-procedure.page.scss'],\n})\nexport class AddProcedurePage implements OnInit {\n  hospitals = [];\n  allProcedures = ['Inject', 'Sedate', 'Root canal', 'Eye test'];\n  addProcedureForm: FormGroup;\n  procedureForm: FormGroup;\n  constructor(\n    public modalController: ModalController,\n    public toastController: ToastController,\n    private authService: AuthService,\n    private router: Router,\n    private storage: Storage\n  ) {\n    this.storage.get('hospitals').then((data) => (this.hospitals = data));\n  }\n\n  ngOnInit() {\n    this.initializeForms();\n  }\n\n  ionViewWillEnter() {\n    this.initializeForms();\n    this.addProcedureForm.get('hospital').valueChanges.subscribe((value) => {\n      this.addProcedureForm.get('procedures').enable();\n      this.addProcedureForm.get('procedures').patchValue([]);\n    });\n  }\n\n  ionViewWillLeave() {\n    this.initializeForms();\n  }\n\n  initializeForms() {\n    this.addProcedureForm = new FormGroup({\n      hospital: new FormControl('', [Validators.required]),\n      procedures: new FormControl({ value: [], disabled: true }, [Validators.required]),\n    });\n    this.procedureForm = new FormGroup({\n      procedures: new FormArray([]),\n    });\n  }\n\n  async openProcedureDetailsDialog() {\n    const modal = await this.modalController.create({\n      component: ProcedureDetailsComponent,\n      componentProps: {\n        procedures: this.addProcedureForm.get('procedures').value,\n      },\n    });\n    await modal.present();\n    const { data } = await modal.onDidDismiss();\n    if (data !== 'dismissed') {\n      this.addProcedure(data);\n    }\n  }\n\n  addProcedure(procedureDetails: FormGroup[]) {\n    const allSelectedProcedures = this.procedureForm.get('procedures') as FormArray;\n    procedureDetails.forEach((procedureGroup) => {\n      const procedure = new FormGroup({\n        hospital: new FormControl(this.addProcedureForm.get('hospital').value, [Validators.required]),\n        procedure: new FormControl(procedureGroup.value.procedure, [Validators.required]),\n        count: new FormControl(procedureGroup.value.count, [Validators.min(1)]),\n        amount: new FormControl(procedureGroup.value.amount, [Validators.required, Validators.min(0)]),\n        patient: new FormControl(procedureGroup.value.patient),\n      });\n      allSelectedProcedures.controls.push(procedure);\n    });\n  }\n\n  submit() {\n    if (this.procedureForm.valid) {\n      this.saveData();\n      this.authService.showLoader('Saving procedures').then();\n      setTimeout(() => {\n        this.router.navigateByUrl('').then(() => this.authService.dismissLoader());\n      }, 1000);\n    }\n  }\n\n  async saveData() {\n    // TODO: for demo purpose\n    let totalFees = parseInt(await this.storage.get('total_fees_this_month'), 10) || 0;\n    let totalProcedures = parseInt(await this.storage.get('total_procedures'), 10) || 0;\n    const hospitals = await this.storage.get('hospitals');\n    const hospitalData = {};\n    await hospitals.forEach(async (hospital) => {\n      hospitalData[hospital] = (await this.storage.get(hospital)) || 0;\n    });\n\n    const procedureList = (this.procedureForm.get('procedures') as FormArray).controls;\n    procedureList.forEach((procedure) => {\n      totalFees += parseInt(procedure.value.amount, 10) * parseInt(procedure.value.count, 10);\n      totalProcedures += parseInt(procedure.value.count, 10);\n      hospitalData[procedure.value.hospital] =\n        parseInt(hospitalData[procedure.value.hospital], 10) + parseInt(procedure.value.amount, 10) * parseInt(procedure.value.count, 10);\n    });\n    await this.storage.set('total_fees_this_month', totalFees + '');\n    await this.storage.set('total_procedures', totalProcedures + '');\n    await hospitals.forEach(async (hospital) => {\n      await this.storage.set(hospital, hospitalData[hospital]);\n    });\n  }\n\n  async presentToast(mes: string) {\n    const toast = await this.toastController.create({\n      message: mes,\n      duration: 2000,\n    });\n    await toast.present();\n  }\n\n  deleteProcedure(index) {\n    const procedures = this.procedureForm.get('procedures') as FormArray;\n    procedures.controls.splice(index, 1);\n  }\n}\n\n@Component({\n  selector: 'procedure-details',\n  template: `\n    <ion-header translucent>\n      <ion-toolbar>\n        <ion-title>Modal Content</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"dismissModal('dismissed')\">Close</ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content *ngIf=\"procedureDetails\">\n      <form [formGroup]=\"procedureDetails\" style=\"margin-bottom: 36px\">\n        <div formArrayName=\"procedures\">\n          <section *ngFor=\"let procedure of procedures; let i = index\" [formGroupName]=\"i\">\n            <ion-item-group>\n              <ion-item-divider>\n                <ion-label>{{ procedure }}</ion-label>\n              </ion-item-divider>\n\n              <div class=\"flex-row ml-5 mt-2\" style=\"width: 72%\">\n                <mat-form-field style=\"width: 20%; margin-right: 8%\">\n                  <input matInput formControlName=\"count\" placeholder=\"Count\" required />\n                </mat-form-field>\n                <mat-form-field>\n                  <input matInput formControlName=\"amount\" placeholder=\"Amount per procedure\" required />\n                </mat-form-field>\n                <mat-form-field style=\"width: 100%\">\n                  <input matInput formControlName=\"patient\" placeholder=\"Patient's name\" required />\n                </mat-form-field>\n              </div>\n            </ion-item-group>\n          </section>\n        </div>\n      </form>\n    </ion-content>\n    <div class=\"bottom-fixed-div\">\n      <ion-button class=\"w-100\" type=\"submit\" (click)=\"submit()\" color=\"secondary\">Submit</ion-button>\n    </div>\n  `,\n})\nexport class ProcedureDetailsComponent implements OnInit {\n  @Input() procedures: string[];\n  procedureDetails = new FormGroup({\n    procedures: new FormArray([]),\n  });\n  constructor(public modalController: ModalController, public toastController: ToastController) {}\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n  async presentToast(mes: string) {\n    const toast = await this.toastController.create({\n      message: mes,\n      duration: 2000,\n    });\n    await toast.present();\n  }\n\n  dismissModal(data) {\n    this.modalController.dismiss(data).then();\n  }\n\n  initializeForm() {\n    this.procedures.forEach((procedure) => this.addProcedure(procedure));\n  }\n\n  addProcedure(procedure) {\n    const procedureDetailArray = this.procedureDetails.get('procedures') as FormArray;\n    const procedureDetails = new FormGroup({\n      procedure: new FormControl(procedure),\n      count: new FormControl(1, [Validators.min(1), Validators.required]),\n      amount: new FormControl(100, [Validators.min(0), Validators.required]),\n      patient: new FormControl(''),\n    });\n    procedureDetailArray.controls.push(procedureDetails);\n  }\n\n  submit() {\n    if (this.procedureDetails.valid) {\n      const procedureDetails = this.procedureDetails.get('procedures') as FormArray;\n      this.dismissModal(procedureDetails.controls);\n    } else {\n      this.presentToast('Form is invalid').then();\n    }\n  }\n}\n"]}