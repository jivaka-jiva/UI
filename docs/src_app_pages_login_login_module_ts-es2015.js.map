{"version":3,"sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html"],"names":[],"mappings":"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","file":"src_app_pages_login_login_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {IonicStorageModule} from '@ionic/storage';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IonicStorageModule.forRoot(),\n    LoginPageRoutingModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n  constructor(\n    private authService: AuthService,\n    private toastController: ToastController,\n    private router: Router,\n    private storage: Storage\n  ) {}\n\n  ngOnInit() {}\n\n  public async presentToast(mes: string) {\n    const toast = await this.toastController.create({\n      message: mes,\n      duration: 3000,\n    });\n    await toast.present();\n  }\n\n  async login() {\n    if (this.loginForm.valid) {\n      const isRegistered = await this.storage.get('isRegistered');\n      if (isRegistered === 'yes') {\n        this.authService.login(this.loginForm.value).then((result) => {\n          if (result) {\n            this.router.navigateByUrl('').then();\n          } else {\n            this.presentToast('Invalid email id or password').then();\n          }\n        });\n      } else {\n        this.presentToast('User does not exist, please sign up.').then();\n      }\n    }\n  }\n}\n","<div class=\"container-fluid d-flex ion-justify-content-center h-100\">\n  <div class=\"row\" style=\"flex: 1 0 auto\">\n    <div class=\"m-auto card-dimensions\">\n      <mat-card class=\"mat-elevation-z0 ion-text-center h-100 pt-5 pb-5\">\n        <img width=\"240px\" src=\"../../../assets/brand-logo.png\" alt=\"Easy Doc Logo\">\n        <mat-card-content>\n          <form [formGroup]=\"loginForm\" class=\"single-line-container content-padding\" (ngSubmit)=\"login()\">\n            <mat-form-field>\n              <input matInput placeholder=\"Email\" type=\"email\" required formControlName=\"username\">\n              <mat-error *ngIf=\"loginForm.get('username').hasError('email') && !loginForm.get('username').hasError('required')\">\n                Please enter a valid email address\n              </mat-error>\n              <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\n                Email is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Password\" type=\"password\" required formControlName=\"password\">\n              <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\n                Password is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <button mat-raised-button class=\"mt-4\" type=\"submit\" color=\"primary\">Login</button>\n            <p style=\"font-size: 14px\" class=\"mt-2\">\n              Don't have an account? <a [routerLink]=\"['/register']\">Sign up</a>\n            </p>\n          </form>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}