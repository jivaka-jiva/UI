{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/rxjs/_esm2015/internal/Notification.js","webpack:///node_modules/rxjs/_esm2015/internal/ReplaySubject.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/throwError.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/observeOn.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/pairwise.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/shareReplay.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/takeWhile.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/asap.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/queue.js","webpack:///node_modules/rxjs/_esm2015/internal/util/Immediate.js","webpack:///node_modules/rxjs/_esm2015/internal/util/isObservable.js"],"names":["DataSource","isDataSource","value","connect","ArrayDataSource","_data","isObservable","of","_DisposeViewRepeaterStrategy","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","index","remove","get","move","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","_detachAndCacheView","_moveView","destroy","cachedView","_insertViewFromCache","$implicit","undefined","viewArgs","detachedView","detach","_maybeCacheView","length","push","indexOf","pop","insert","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","Subject","forEach","_markSelected","_selected","Array","from","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","sort","next","source","added","removed","add","ngDevMode","getMultipleValuesInSingleSelectionError","Error","UniqueSelectionDispatcher","_listeners","id","name","listener","filter","registered","ɵfac","UniqueSelectionDispatcher_Factory","t","ɵprov","factory","token","providedIn","type","Injectable","args","_VIEW_REPEATER_STRATEGY","InjectionToken","scrollBehaviorSupported","supportsScrollBehavior","BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","coerceCssPixelValue","classList","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","run","overlayRef","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ScrollStrategyOptions_Factory","DOCUMENT","ctorParameters","ScrollDispatcher","ViewportRuler","NgZone","decorators","Inject","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","Optional","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","splice","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","event","overlays","i","_keydownEvents","observers","_isAttached","addEventListener","removeEventListener","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_platform","_cursorStyleIsSet","_clickListener","target","composedPath","slice","_outsidePointerEvents","IOS","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","Platform","isTestEnvironment","__karma__","jasmine","jest","Mocha","OverlayContainer","container","_containerElement","parentNode","removeChild","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","appendChild","OverlayContainer_Factory","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","Subscription","_backdropClickHandler","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","pipe","take","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","complete","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","coerceArray","cssClass","subscription","takeUntil","merge","children","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","ElementRef","Element","destination","hasOwnProperty","input","split","units","parseFloat","clientRect","floor","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","onPositionChange","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","ApplicationRef","DomPortalOutlet","Overlay_Factory","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","ɵdir","selectors","exportAs","Directive","CdkConnectedOverlay","_overlay","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","backdropClick","EventEmitter","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","TemplatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","coerceBooleanProperty","_attachOverlay","_detachOverlay","create","_buildConfig","attachments","emit","detachments","keydownEvents","keyCode","ESCAPE","hasModifierKey","preventDefault","outsidePointerEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","_createOverlay","takeWhile","CdkConnectedOverlay_Factory","inputs","outputs","features","TemplateRef","ViewContainerRef","propDecorators","Input","Output","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","OverlayModule_Factory","ɵmod","ɵinj","providers","imports","BidiModule","PortalModule","ScrollingModule","NgModule","exports","declarations","ngJitMode","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","template","DomPortal","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","rootNodes","rootNode","detectChanges","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","ɵTemplatePortalDirective_BaseFactory","TemplatePortalDirective_Factory","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","ɵPortalHostDirective_BaseFactory","PortalHostDirective_Factory","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","distinctUntilChanged","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","coerceNumberProperty","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","forwardRef","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","Map","set","elementScrolled","scrollableReference","auditTimeInMs","Observable","observer","_addGlobalListener","auditTime","_removeGlobalListener","_","deregister","elementOrElementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","defaultView","coerceElement","scrollableElement","_getWindow","fromEvent","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","register","options","el","getRtlScrollAxisType","_applyScrollToOptions","scrollTo","scrollTop","scrollLeft","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","_change","_changeListener","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","animationFrame","asap","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","orientation","_calculateSpacerSize","_measureViewportSize","startWith","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","range","onContentRendered","to","isHorizontal","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","ChangeDetectorRef","ViewChild","Component","ViewEncapsulation","ChangeDetectionStrategy","getOffset","node","rect","CdkVirtualForOf","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","pairwise","switchMap","prev","cur","_changeDataSource","shareReplay","_differ","_needsUpdate","_onRenderedDataChange","_cdkVirtualForOf","_cdkVirtualForTrackBy","item","renderedStartIndex","rangeLen","firstNode","lastNode","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","disconnect","count","_updateComputedContextProperties","applyChanges","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","cdkVirtualForOf","CdkVirtualForOf_Factory","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","useClass","IterableDiffers","SkipSelf","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule_Factory","PlatformModule","MatSelect_span_4_Template","ctx_r2","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_ng_content_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","$event","ctx_r8","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","ctx_r4","_getPanelTheme","_transformOrigin","_triggerFontSize","multiple","ariaLabel","_getPanelAriaLabelledby","_c2","_c3","matSelectAnimations","transformPanelWrap","trigger","transition","query","animateChild","optional","transformPanel","state","opacity","animate","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","mixinDisableRipple","mixinTabIndex","mixinDisabled","mixinErrorState","MAT_SELECT_TRIGGER","MatSelectTrigger","MatSelectTrigger_Factory","_MatSelectBase","_parentFormField","tabIndex","_liveAnnouncer","_defaultOptions","_a","_b","_c","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_destroy","_onChange","_onTouched","_valueId","_overlayPanelClass","overlayPanelClass","_focused","controlType","_required","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","defer","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","parseInt","_placeholder","stateChanges","_selectionModel","_initializeSelection","_value","newValue","isArray","_setSelectionByValue","_id","_panelDoneAnimating","panelOpen","_initKeyManager","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","removeAttribute","updateErrorState","_keyManager","withTypeAhead","_canOpen","withHorizontalOrientation","_highlightCorrectOption","isDisabled","disabled","empty","selectedOptions","viewValue","reverse","join","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","isOpenKey","ENTER","SPACE","manager","isTyping","altKey","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","A","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_overlayDir","_positioningSettled","color","setInactiveStyles","_selectValue","_sortValues","correspondingOption","updateActiveItem","error","console","warn","ActiveDescendantKeyManager","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","focus","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","setActiveItem","toArray","a","b","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","labelId","getLabelId","labelExpression","ariaLabelledby","isOpen","ids","_ariaDescribedby","_MatSelectBase_Factory","MAT_FORM_FIELD","_MatSelectBase_Query","required","compareWith","errorStateMatcher","ErrorStateMatcher","NgForm","FormGroupDirective","MatFormField","NgControl","Self","String","Attribute","LiveAnnouncer","MatSelect","arguments","_scrollTop","_positions","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_triggerRect","getComputedStyle","fontSize","_calculateOverlayPosition","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_calculateOverlayOffsetX","paddingWidth","group","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","ɵMatSelect_BaseFactory","MatSelect_Factory","contentQueries","MatSelect_ContentQueries","dirIndex","MatOption","MAT_OPTGROUP","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","toString","errorState","_getAriaActiveDescendant","disableRipple","MatFormFieldControl","MAT_OPTION_PARENT_COMPONENT","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","directives","animation","ContentChildren","descendants","ContentChild","animations","MatSelectModule","MatSelectModule_Factory","CommonModule","MatOptionModule","MatCommonModule","MatFormFieldModule","NotificationKind","Notification","kind","hasValue","nextOrObserver","observe","throwError","undefinedValueNotification","err","completeNotification","ReplaySubject","bufferSize","POSITIVE_INFINITY","windowTime","scheduler","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","shift","ReplayEvent","_getNow","_trimBufferThenGetEvents","subscriber","len","closed","ObjectUnsubscribedError","isStopped","hasError","SubjectSubscription","ObserveOnSubscriber","thrownError","queue","now","eventsCount","spliceCount","time","schedule","dispatch","observeOn","delay","observeOnOperatorFunction","lift","ObserveOnOperator","notification","ObserveOnMessage","scheduleMessage","arg","Subscriber","PairwiseOperator","PairwiseSubscriber","hasPrev","configOrBufferSize","refCount","shareReplayOperator","useRefCount","subject","isComplete","shareReplayOperation","innerSub","inclusive","TakeWhileOperator","TakeWhileSubscriber","result","nextOrComplete","predicateResult","Boolean","AnimationFrameAction","work","actions","scheduled","flush","cancelAnimationFrame","AsyncAction","AnimationFrameScheduler","action","active","execute","AsyncScheduler","AsapAction","Immediate","bind","AsapScheduler","QueueAction","_execute","QueueScheduler","nextHandle","RESOLVED","activeHandles","findAndClearHandle","handle","setImmediate","cb","clearImmediate","TestTools","pending","obj"],"mappings":"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","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_select_js-es5.js","sourcesContent":["import { isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = 1 /* INSERTED */;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = 3 /* REMOVED */;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) { // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? 1 /* INSERTED */ : 0 /* REPLACED */;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = 3 /* REMOVED */;\n            }\n            else { // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\nUniqueSelectionDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/common';\nimport { DOCUMENT, Location } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgZone, Inject, Optional, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollStrategyOptions.ɵprov = i0.ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(i0.ɵɵinject(i1.ScrollDispatcher), i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1$1.DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = function BaseOverlayDispatcher_Factory(t) { return new (t || BaseOverlayDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nBaseOverlayDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function BaseOverlayDispatcher_Factory() { return new BaseOverlayDispatcher(i0.ɵɵinject(i1$1.DOCUMENT)); }, token: BaseOverlayDispatcher, providedIn: \"root\" });\nBaseOverlayDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseOverlayDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayKeyboardDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(i0.ɵɵinject(i1$1.DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            // Get the target through the `composedPath` if possible to account for shadow DOM.\n            const target = event.composedPath ? event.composedPath()[0] : event.target;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click dispatch the mouse event, and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            body.addEventListener('click', this._clickListener, true);\n            body.addEventListener('auxclick', this._clickListener, true);\n            body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) { return new (t || OverlayOutsideClickDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayOutsideClickDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayOutsideClickDispatcher_Factory() { return new OverlayOutsideClickDispatcher(i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform)); }, token: OverlayOutsideClickDispatcher, providedIn: \"root\" });\nOverlayOutsideClickDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayOutsideClickDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module or Angular starts tearing\n * down the testing `NgModule` (see https://github.com/angular/angular/issues/18831).\n */\nconst isTestEnvironment = (typeof __karma__ !== 'undefined' && !!__karma__) ||\n    (typeof jasmine !== 'undefined' && !!jasmine) ||\n    (typeof jest !== 'undefined' && !!jest) ||\n    (typeof Mocha !== 'undefined' && !!Mocha);\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        if (this._platform.isBrowser || isTestEnvironment) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayContainer.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        let finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach(cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height)\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n        this.onPositionChange = this._positionStrategy.positionChanges;\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attach this position strategy to an overlay. */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /** Disposes all resources used by the position strategy. */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /** @docs-private */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    withOffsetX(offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    withOffsetY(offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    setOrigin(origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 8.0.0\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\nOverlayPositionBuilder.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform), i0.ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location), ɵngcc0.ɵɵinject(OverlayOutsideClickDispatcher)); };\nOverlay.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location },\n    { type: OverlayOutsideClickDispatcher }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location }, { type: OverlayOutsideClickDispatcher }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() { return this._offsetX; }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() { return this._offsetY; }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() { return this._lockPosition; }\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() { return this._growAfterOpen; }\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() { return this._push; }\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    disableClose: [{ type: Input, args: ['cdkConnectedOverlayDisableClose',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }],\n    overlayOutsideClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], disableClose: [{\n            type: Input,\n            args: ['cdkConnectedOverlayDisableClose']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], overlayOutsideClick: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = function OverlayModule_Factory(t) { return new (t || OverlayModule)(); };\nOverlayModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nFullscreenOverlayContainer.ɵprov = i0.ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_a, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_c, BaseOverlayDispatcher as ɵangular_material_src_cdk_overlay_overlay_d };\n\n//# sourceMappingURL=overlay.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn((() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = /*@__PURE__*/ function () { let ɵTemplatePortalDirective_BaseFactory; return function TemplatePortalDirective_Factory(t) { return (ɵTemplatePortalDirective_BaseFactory || (ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective)))(t || TemplatePortalDirective); }; }();\nTemplatePortalDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = /*@__PURE__*/ function () { let ɵPortalHostDirective_BaseFactory; return function PortalHostDirective_Factory(t) { return (ɵPortalHostDirective_BaseFactory || (ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective)))(t || PortalHostDirective); }; }();\nPortalHostDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵfac = function PortalModule_Factory(t) { return new (t || PortalModule)(); };\nPortalModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/cdk/collections';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() { }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = (this._itemSize > 0) ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() { return this._itemSize; }\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nScrollDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i2.DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // We don't need to keep track of the subscription,\n            // because we complete the `change` stream on destroy.\n            this.change().subscribe(() => this._updateViewportSize());\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nViewportRuler.ɵprov = i0.ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i2.DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler)); };\nCdkVirtualScrollViewport.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n            undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode ?\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), (record) => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: _RecycleViewRepeaterStrategy, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: ɵngcc3._RecycleViewRepeaterStrategy, decorators: [{\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }], cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵfac = function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); };\nCdkScrollableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); };\nScrollingModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, ErrorStateMatcher, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/material/form-field';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder);\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue);\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._required = false;\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = (labelId ? labelId + ' ' : '');\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\n_MatSelectBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatSelectBase.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\n_MatSelectBase.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    _overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    panelClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSelectBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], _overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], panelClass: [{\n            type: Input\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize =\n                parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset =\n                Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = /*@__PURE__*/ function () { let ɵMatSelect_BaseFactory; return function MatSelect_Factory(t) { return (ɵMatSelect_BaseFactory || (ɵMatSelect_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSelect)))(t || MatSelect); }; }();\nMatSelect.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"]\n            }]\n    }], null, { options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); };\nMatSelectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    observe(observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    }\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    }\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\n//# sourceMappingURL=Notification.js.map","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        const _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n//# sourceMappingURL=ReplaySubject.js.map","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n//# sourceMappingURL=observeOn.js.map","import { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return (source) => source.lift(new PairwiseOperator());\n}\nclass PairwiseOperator {\n    call(subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    }\n}\nclass PairwiseSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasPrev = false;\n    }\n    _next(value) {\n        let pair;\n        if (this.hasPrev) {\n            pair = [this.prev, value];\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n        if (pair) {\n            this.destination.next(pair);\n        }\n    }\n}\n//# sourceMappingURL=pairwise.js.map","import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime,\n            refCount: false,\n            scheduler\n        };\n    }\n    return (source) => source.lift(shareReplayOperator(config));\n}\nfunction shareReplayOperator({ bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler }) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next(value) { subject.next(value); },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n        }\n        const innerSub = subject.subscribe(this);\n        this.add(() => {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n//# sourceMappingURL=shareReplay.js.map","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=takeWhile.js.map","import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AnimationFrameAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrameScheduler.js.map","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AsapAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n//# sourceMappingURL=QueueAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n//# sourceMappingURL=QueueScheduler.js.map","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asap = new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queue = new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        RESOLVED.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n//# sourceMappingURL=Immediate.js.map","import { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n//# sourceMappingURL=isObservable.js.map"]}